name: dev cd

on:
  push:
    branches: [ "main" ]

jobs:
  update-api-docs:
    runs-on: ubuntu-latest

    steps:
      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'
      - uses: actions/checkout@v4

      - name: gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: 'pip'
      - run: pip install boto3
      - run: python3 ./scripts/upload_oas3.py ${{ secrets.DEV_S3_ACCESS_KEY }} ${{ secrets.DEV_S3_SECRET_KEY }} ${{ secrets.DEV_S3_BUCKET_NAME }}

  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: setup java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: gradle caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: login docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_EMAIL_WWAN13 }}
          password: ${{ secrets.DOCKERHUB_TOKEN_WWAN13 }}

      - name: clean gradle projects
        run: ./gradlew deskmood-core:core-api:clean

      - name: build core api
        run: ./gradlew deskmood-core:core-api:build

      - name: docker build and push to hub sso-application
        uses: docker/build-push-action@v3
        with:
          context: ./deskmood-core/core-api
          file: ./deskmood-core/core-api/Dockerfile
          push: true
          tags: wwan13/deskmood-core-api:dev

      - name: deploy to aws instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DEV_REMOTE_HOST }}
          username: ${{ secrets.DEV_REMOTE_USERNAME }}
          key: ${{ secrets.DEV_REMOTE_PRIVATE_KEY }}
          port: 22
          script: |
            sudo chmod +x ./deskmood-server/scripts/deploy.sh 
            sudo ./deskmood-server/scripts/deploy.sh